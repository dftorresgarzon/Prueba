//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiciosTienda.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TiendaRealEntities : DbContext
    {
        public TiendaRealEntities()
            : base("name=TiendaRealEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Barrio> Barrio { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<DepartamentosProductos> DepartamentosProductos { get; set; }
        public virtual DbSet<Empaque> Empaque { get; set; }
        public virtual DbSet<Fabricante> Fabricante { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<RegistroAlmacen> RegistroAlmacen { get; set; }
        public virtual DbSet<SubdepartamentosProductos> SubdepartamentosProductos { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<ConsultarPorIdProducto_Result> ConsultarPorIdProducto(Nullable<decimal> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPorIdProducto_Result>("ConsultarPorIdProducto", idProductoParameter);
        }
    
        public virtual ObjectResult<ConsultarPorIdRegistroAlmacen_Result> ConsultarPorIdRegistroAlmacen(Nullable<decimal> idRegistro)
        {
            var idRegistroParameter = idRegistro.HasValue ?
                new ObjectParameter("IdRegistro", idRegistro) :
                new ObjectParameter("IdRegistro", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPorIdRegistroAlmacen_Result>("ConsultarPorIdRegistroAlmacen", idRegistroParameter);
        }
    
        public virtual ObjectResult<ConsultarTodasSucursales_Result> ConsultarTodasSucursales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodasSucursales_Result>("ConsultarTodasSucursales");
        }
    
        public virtual ObjectResult<ConsultarTodosDepartamentos_Result> ConsultarTodosDepartamentos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodosDepartamentos_Result>("ConsultarTodosDepartamentos");
        }
    
        public virtual ObjectResult<ConsultarTodosProductos_Result> ConsultarTodosProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodosProductos_Result>("ConsultarTodosProductos");
        }
    
        public virtual ObjectResult<ConsultarTodosRegistrosAlmacen_Result> ConsultarTodosRegistrosAlmacen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodosRegistrosAlmacen_Result>("ConsultarTodosRegistrosAlmacen");
        }
    
        public virtual int EliminarRegistroAlmacen(Nullable<decimal> idRegistro)
        {
            var idRegistroParameter = idRegistro.HasValue ?
                new ObjectParameter("IdRegistro", idRegistro) :
                new ObjectParameter("IdRegistro", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarRegistroAlmacen", idRegistroParameter);
        }
    
        public virtual int GuardarRegistroAlmacen(Nullable<decimal> idSucursal, Nullable<decimal> idProducto, Nullable<decimal> cantidad)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(decimal));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarRegistroAlmacen", idSucursalParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual int ModificarRegistroAlmacen(Nullable<decimal> idRegistro, Nullable<decimal> idSucursal, Nullable<decimal> idProducto, Nullable<decimal> cantidad)
        {
            var idRegistroParameter = idRegistro.HasValue ?
                new ObjectParameter("IdRegistro", idRegistro) :
                new ObjectParameter("IdRegistro", typeof(decimal));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("IdSucursal", idSucursal) :
                new ObjectParameter("IdSucursal", typeof(decimal));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarRegistroAlmacen", idRegistroParameter, idSucursalParameter, idProductoParameter, cantidadParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int EliminarProducto(Nullable<decimal> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProducto", idProductoParameter);
        }
    
        public virtual int GuardarProducto(Nullable<decimal> idTipoEmpaque, Nullable<decimal> idFabricante, Nullable<decimal> idSubdepartamento, string nombreProducto, Nullable<decimal> tamanioCm3, Nullable<decimal> precio, string caracteristicas, string urlImagen)
        {
            var idTipoEmpaqueParameter = idTipoEmpaque.HasValue ?
                new ObjectParameter("IdTipoEmpaque", idTipoEmpaque) :
                new ObjectParameter("IdTipoEmpaque", typeof(decimal));
    
            var idFabricanteParameter = idFabricante.HasValue ?
                new ObjectParameter("IdFabricante", idFabricante) :
                new ObjectParameter("IdFabricante", typeof(decimal));
    
            var idSubdepartamentoParameter = idSubdepartamento.HasValue ?
                new ObjectParameter("IdSubdepartamento", idSubdepartamento) :
                new ObjectParameter("IdSubdepartamento", typeof(decimal));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var tamanioCm3Parameter = tamanioCm3.HasValue ?
                new ObjectParameter("TamanioCm3", tamanioCm3) :
                new ObjectParameter("TamanioCm3", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var caracteristicasParameter = caracteristicas != null ?
                new ObjectParameter("Caracteristicas", caracteristicas) :
                new ObjectParameter("Caracteristicas", typeof(string));
    
            var urlImagenParameter = urlImagen != null ?
                new ObjectParameter("UrlImagen", urlImagen) :
                new ObjectParameter("UrlImagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProducto", idTipoEmpaqueParameter, idFabricanteParameter, idSubdepartamentoParameter, nombreProductoParameter, tamanioCm3Parameter, precioParameter, caracteristicasParameter, urlImagenParameter);
        }
    
        public virtual int ModificarProducto(Nullable<decimal> idProducto, Nullable<decimal> idTipoEmpaque, Nullable<decimal> idFabricante, Nullable<decimal> idSubdepartamento, string nombreProducto, Nullable<decimal> tamanioCm3, Nullable<decimal> precio, string caracteristicas, string urlImagen)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(decimal));
    
            var idTipoEmpaqueParameter = idTipoEmpaque.HasValue ?
                new ObjectParameter("IdTipoEmpaque", idTipoEmpaque) :
                new ObjectParameter("IdTipoEmpaque", typeof(decimal));
    
            var idFabricanteParameter = idFabricante.HasValue ?
                new ObjectParameter("IdFabricante", idFabricante) :
                new ObjectParameter("IdFabricante", typeof(decimal));
    
            var idSubdepartamentoParameter = idSubdepartamento.HasValue ?
                new ObjectParameter("IdSubdepartamento", idSubdepartamento) :
                new ObjectParameter("IdSubdepartamento", typeof(decimal));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var tamanioCm3Parameter = tamanioCm3.HasValue ?
                new ObjectParameter("TamanioCm3", tamanioCm3) :
                new ObjectParameter("TamanioCm3", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var caracteristicasParameter = caracteristicas != null ?
                new ObjectParameter("Caracteristicas", caracteristicas) :
                new ObjectParameter("Caracteristicas", typeof(string));
    
            var urlImagenParameter = urlImagen != null ?
                new ObjectParameter("UrlImagen", urlImagen) :
                new ObjectParameter("UrlImagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarProducto", idProductoParameter, idTipoEmpaqueParameter, idFabricanteParameter, idSubdepartamentoParameter, nombreProductoParameter, tamanioCm3Parameter, precioParameter, caracteristicasParameter, urlImagenParameter);
        }
    }
}
